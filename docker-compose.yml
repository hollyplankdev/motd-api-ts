services:
  # The image we'll use to route our services under JUST the 80 port.
  # Thank you to https://umasrinivask.medium.com/configure-nginx-as-a-reverse-proxy-with-docker-compose-file-4ebba2b75c89
  # for help with configuring this!
  motd-reverse-proxy:
    image: nginx:stable
    depends_on:
      - motd-frontend
      - motd-backend
    # Removed so that this works with coolify
    #ports:
    #  - 80:80
    # Tell NGINX where the config we wanna use is. This determines how reverse proxying works.
    volumes:
      - ./nginx.reverse-proxy.conf:/etc/nginx/nginx.conf

  # Expose the frontend as a simple HTTP server.
  motd-frontend:
    image: motd-api-ts/frontend
    build:
      dockerfile: pnpm.Dockerfile
      target: react-frontend
    pull_policy: never # Make sure we don't try to pull this image from the net
    depends_on:
      - motd-backend

  # The backend express API.
  motd-backend:
    image: motd-api-ts/backend
    build:
      dockerfile: pnpm.Dockerfile
      target: express-backend
    pull_policy: never # Make sure we don't try to pull this image from the net
    depends_on:
      - motd-database
    environment:
      NODE_ENV: production
      MONGODB_URL: mongodb://motd-database:27017

  # The in-docker database. For a portfolio project, I think having something non-persistent is fine.
  motd-database:
    image: mongo:6-jammy
    # Store the DB contents in a specific volume
    volumes:
      - motd-database-cache:/data/db

volumes:
  motd-database-cache:
